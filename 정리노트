
UI 액티비티-뷰 구조
액티비티?
	안드로이드 컴포넌트(Activity, Service, ContentProvider, BroadcastReciever)들 중 하나로써, 화면 출력을 담당한다.
뷰?
	다양한 화면의 내용물(UI)을 추상화한 클래스.

setContentView(View view)
setContentView(int layoutResID)
	액티비티에서 뷰를 추가

두가지 UI 작성법?
	자바 코드와 Layout XML

LinearLayout
	뷰를 순서대로 가로 혹은 세로로 정렬하는 Container (ViewGroup)
Layout XML?
	뷰를 XML 파일로 정의, /res/layout 디렉토리에 저장.

Launcher Activity?
	해당 액티비티를 다른 Activity와 별개로 독립적으로 실행.


뷰 태그의 속성?
	뷰 태그에 다양한 속성을 추가할 수 있으며, 이 속성들을 이용하여 뷰를 정의, 설정한다.

	*TextView?
		화면에 문자열을 출력하는 뷰.

	id 속성?
		뷰의 식별자를 부여. 자바 코드에서 참조 가능.
		R.id?
			android:id="@+id/[name]" 속성으로 부여된 id 값은 R.java에 클래스에 등록된다.

		findViewById(int id)
			뷰의 식별자를 이용하여 뷰 객체를 리턴.


layout_width, layout_height?
	뷰의 가로(layout_width), 세로(layout_height) 크기를 지정.
    match_parent, fill_content
	해당 뷰가 부모 뷰의 크기를 모두 차지.
    wrap_content
	해당 뷰의 크기를 적절하게 계산해서 결정. ex) TextView는 폰트 크기와 갯수에 영향을 받는다.
    100px
	해당 뷰의 크기를 px로 지정

margin
	layout_marginLeft, layout_marginRight, layout_marginTop, layout_marginBottom
	여러 뷰 간의 간격을 지정.
padding
	layout_paddingLeft,layout_paddingRight, layout_paddingTop, layout_paddingBottom,
	하나의 뷰의 테두리(변)과 내용과의 간격을 지정.


clickable
	TextView, ImageView의 clickable 속성

visibility
    true, invisible, gone
	-뷰의 가시성을 제어.
	invisible과 gone의 차이?
		-둘 다 가시성을 잃지만, invisible은 화면을 차지하고 gone은 화면의 차지 공간을 잃는다.
setVisibility(int visible)
	자바 코드에서 뷰의 가시성을 제어

View.OnClickListener?

뷰의 계층구조
	뷰는 뷰 객체 간의 계층을 이룬다.
View?
	뷰 클래스의 최상위 클래스.
ViewGroup?
	뷰 클래스의 자식 클래스로 Container 역할을 담당한다. Layout 클래스들의 부모 클래스.
TextView?
	지정한 문자열을 출력하는 View 클래스

레이아웃 XML로 계층구조 구현 방법?
	태그의 상하 관계를 이용.

자바 코드로 계층구조 구현 방법?
	Activity.addView(View view)

뷰 클래스
    TextView?
        android:text?
		    -화면에 출력할 문자열을 지정.
        android:typeface?
		    normal(default), sans, serif, monospace
		    -문자열의 폰트를 지정.
        TextView.setTypeFace(Typeface typeface)?
		    -자바 코드에서 임의의 폰트를 지정.
        android:textStyle?
		normal(default), bold, italic
		    -문자열 효과를 지정
        android:textColor?
        android:textSize?
        android:autoLink? *
		web|email|phone
		    -문자열을 parsing해 특정 형태의 맞는 link로 처리.
        maxLines?
		    -화면에 출력할 최대 라인을 지정.
        ellipsize?
            -maxLines로 지정된 최대 라인을 문자열이 초과시 생략하고 줄임 표시(..) 추가.

    ImageView?
        android:src
        android:maxWidth, android:maxHeight
        android:adjustViewBounds?
        android:tint?

    EditText?
        android:lines?
        android:maxLines?
        android:inputType?
        android:text?
        android:textMultiLine
        android:gravity

    Button?
        Checkbox extends CompoundButton?
            isChecked()
            setChecked(boolean)
            toggle()
            setOnCheckedChangeListener(OnCheckedChangeListener)
        RadioButton extends CompoundButton?
            RadioGroup?

assets 폴더?
strings.xml?
res/drawable



TableLayout?
    TableRow?
    android:shrinkColumns
    android:stretchColumns
    android:layout_column
    android:layout_span

GridLayout?
    columnCount, rowCount
    orientation 속성과 columnCount, rowCount 의 관계
    layout_column
    layout_row
    layout_columnSpan
    layout_rowSpa
    layout_gravity

ConstraintLayout?
    가로축?
    세로축?
    app:layout_constraint[뷰적용변]_to[상대뷰적용변]Of
    app:layout_constraintLeft_toLeftOf
    app:layout_constraintLeft_toRightOf?
    app:layout_constraintBottom_toBottomOf?

    app:layout_constraint 을 이용해 뷰를 부모 뷰 정중앙에 위치시켜라.

    android:layout_margin[위치]?
    app:layout_goneMargin[위치]?
        상대 뷰의 visibility 가 gone 이고 android:layout_marginLeft=10dp, android:layout_goneMarginLeft 가 설정되어 있지 않다면 해당 뷰의 Left Margin 값은?
        상대 뷰의 visibility 가 gone 이고 android:layout_marginLeft=10dp, android:layout_goneMarginLeft=15dp 라면 해당 뷰의 Left Margin 값은?

    bias?
        layout_constraintHorizontal_bias, layout_constraintVertical_bias

    ratio?
        constraintDimensionRatio
        [Width:Height]
        W,H?


진동과 소리
진동
    진동을 울리려면 Permission 설정이 되어야 한다.
    퍼미션?
        AndroidManifest.xml?
            Permission 은 앱의 메인 환경파일인 AndroidManifest.xml 에서 설정해야 한다.
        <user-permission android:name="android.permission.VIBRATE" />?
           AndroidManifest.xml 에 VIBRATE 퍼미션을 설정한다.
        Vibrator?
            - Vibrator 는 SystemService 중 하나이다.
            getSystemService(VIBRATOR_SERVICE);
                - Vibrator 객체를 획득한다.
                 SystemService?
                    SystemService 은 시스템 레벨의 서비스 이다. 서비스는 안드로이드 4가지 컴포넌트 중 하나이다.
                    getSystemService() 라는 함수를 통해 SystemService 을 획득할 수 있다.
                    시스템 서비스로는 LayoutInflater, LocationManager, TelephonyManager 등이 있다.

            Vibrator.vibrate(long[] pattern, int repeat)
                - 진동을 울린다.
                long 배열의 홀수 번째? long 배열의 짝수 번째?
                    - 배열의 홀수번째는 대기시간, 짝수번째는 진동시간.
                int repeat 값 0, int repeat 값 -1?
                    - 0은 cancel 할 때까지 무한 반복되고, -1 은 한 번만 진동이 울린다.
                    ex) Vibrator.vibrate(new long[]{500, 1000, 500, 1000}, -1);
                    - 0.5 초 대기, 1 초 진동, 0.5 초 대기, 1 초 진동 반복을 한번을 반복한다.
                vibrate 와 cancel()?
                    - int repeat 을 0으로 설정하여 무한 반복시, cancel() 함수를 호출하여 진동을 멈출 수 있다.

소리
    시스템 효과음 중에 하나는 beep 이다. beep 는 '짧은 알림음', '경적' 등을 나타낸다.
    안드로이드에서는 스마트폰에 내장된 기본 효과음 (간단한 알림, 알람, 전화 수신음) 을 제공한다.
    ex) RingtoneManager.TYPE_NOTIFICATION

    시스템 효과음?
        시스템 효과음은 Uri 타입을 이용하여 획득하며 종류에는 ALARM, NOTIFICATION, RINGTONE 이 있다.
        Uri?
            스마트폰에 등록된 효과음의 식별자를 얻을 때 Uri 타입을 이용한다.
        RingtoneManager 의 getDefaultUri(int Type)
        RingtoneManager.play()
            효과음을 재생한다.
        ex) Uri notification = RingtoneManager.getDefaultUri(RingtoneManager.Type_NOTIFICATION);
            Ringtone ringtone = RingtoneManager.getRingtone(getApplicationContext(), notification);
            ringtone.play();

    커스텀 효과음?
        MediaPlayer?
            직접 녹음한 효과음은 MediaPlayer 을 이용하여 재생한다.
        MediaPlayer player = MediaPlayer.create(this, R.raw.fallbackring);

다이얼로그 (Dialog)?
    - 다이얼로그는 다양한 상황을 알리기 위해 사용한다. 다이얼로그의 종류에는 모들(Modal)과 모달리스(Modeless)가 있다.
    모달?
        - 모달은 모달이 닫히기 전까지 메인 창(모달을 호출한 창)을 사용할 수 없다.
    모달리스?
        - 모달리스는 모달리스의 존재 여부에 상관없이 메인 창을 사용할 수 있따.

    모달리스
        토스트?
            토스트는 시간이 지나면 자동으로 사라지는 창이다.

            makeText(Context context, int resId, int duration)?
            makeText(Context context, CharSequence text, int duration)?
                makeText 함수를 이용하여 토스트를 생성한다.
                int duration?
                    int duration 은 Toast 에 상수로 정의되어 있다.
                    LENGTH_SHORT 은 3초 , LENGTH_LONG 은 5초
            Toast.setDuration(int duration)?
            Toast.setText(int resId)?
            Toast.setView(View view)?
            Toast.setGravity(int gravity, int xOffset, int yOffset)?
            Toast.setMargin(float horizontalMargin, float verticalMargin)?
            Toast.show()?
                - 토스트를 보여준다.

    모달
        AlertDialog?
            안드로이드의 가장 기본적인 다이얼로그.
            Dialog 는 타이틀, 본문, 버튼 영역으로 나누어져 있다.
            타이틀과 버튼 영역은 생략할 수 있다.
            AlertDialog 클래스는 AlertDialog 의 Builder 클래스를 이용하여 생성한다.

            AlertDialog 의 화면 구조?
                타이틀, 본문, 버튼 영역.
                타이틀 영역은 아이콘 이미지와 문자열로 이루어진다.
                버튼 영역은 여러 버튼으로 이루어진다.

            AlertDialog.Builder(Context context)?
                AlertDialog.Builder?
                    - AlertDialog 인스턴스를 생성하고 리턴한다.
                    AlertDialog.Builder.setIcon(int iconId)?
                        - 타이틀 영역의 아이콘을 지정.
                    AlertDialog.Builder.setTitle(CharSequence title)?
                        - 타이틀 영역의 문자열을 지정한다.
                    AlertDialog.Builder.setMessage(CharSequence message)?
                        - 본문 영역의 문자열을 지정한다.

                    버튼 영역 설정.
                        - 버튼은 positive, negative, neutral 등 총 3개까지 지정할 수 있다.
                        - 버튼은 같은 성격의 버튼 중복 추가를 허용하지 않는다.

                        DialogInterface.OnClickListener.onClick(DialogInterface dialog, int which)
                            - which 은 클릭된 버튼의 종류를 의미한다.
                    AlertDialog.Builder.setPositiveButton(CharSequence text, DialogInterface.OnClickListener listener)?
                        - 버튼 영역의 버튼을 추가한다. 같은 성격의 중복을 허용하지 않는다.
                    AlertDialog.Builder.setNegativeButton(CharSequence text, DialogInterface.OnClickListener listener)?
                        - 버튼 영역의 버튼을 추가한다. 같은 성격의 중복을 허용하지 않는다.
                    AlertDialog.Builder.setNeutralButton(CharSequence text, DialogInterface.OnClickListener listener)?
                        - 버튼 영역의 버튼을 지정한다. 같은 성격의 중복을 허용하지 않는다.
                    AlertDialog.Builder.create()?
                        - Dialog 의 인스턴스를 생성한다.
                AlertDialog.show()?
                        - 생성된 다이얼로그를 화면에 출력한다.
                AlertDialog.setCancelable(boolean cancelable)?
                        - 뒤로가기 버튼, Dialog 밖 영역을 터치시 닫히는 것을 방지한다.

        목록과 AlertDialog?
            - AlertDialog 을 이용하여 목록 형식을 띄울 수 있다.
            AlertDialog.Builder.setItems(int itemsId, DialogInterface.OnClickListener listener)?
                - res/values 에 정의된 배열[배열 리소스]을 가져와 목록을 구성한다.
            AlertDialog.Builder.setItems(CharSequence[] items, DialogInterface.OnClickListener listener)?
                - 인자로 넘긴 문자열 배열을 이용하여 목록을 구성한다.
                * DialogInterface.OnClickListener.onClick(DialogInterface dialog, int which)?
                    - 항목 선택 이벤트의 핸들러. 두 번째 which 은 선택된 목록 항목의 인덱스이다.

            목록과 checkbox, radio 버튼?
                - 목록 형식을 checkbox 혹은 radio 버튼으로 구성할 수 있다.
                  setMultiChoiceItems 은 checkbox 이며, radio 은 setSingleItems 은 radio 버튼이다.
                  AlertDialog 의 checkbox?
                        AlertDialog.Builder.setMultiChoiceItems(CharSequence[] items, boolean[] checkedItems, DialogInterface.OnMultiChoiceClickListener listener)?
                        AlertDialog.Builder.setMultiChoiceItems(int itemsId, boolean[] checkedItems, DialogInterface.OnMultiChoiceClickListener listener)?
                            - 첫 번째 인자는 항목 구성을 위한 배열 리소스, 혹은 배열이다.
                            - 두 번째 인자는 초기 체크박스의 체크 상태 값이다.
                  AlertDialog 의 radio?
                        AlertDialog.Builder.setSingleItems(CharSequence[] items, boolean[] checkedItems, DialogInterface.OnMultiChoiceClickListener listener)?
                        AlertDialog.Builder.setSingleItems(int itemsId, boolean[] checkedItems, DialogInterface.OnMultiChoiceClickListener listener)?
                            - 첫 번째 인자는 항목 구성을 위한 배열 리소스, 혹은 배열이다.
                            - 두 번째는 초기의 체크 선택 항목이다.

        ProgressDialog extends AlertDialog?
            - 진행 상태를 보여주는 다이얼로그이다. 막대(ProgressDialog.STYLE_HORIZONTAL) 혹은 원(default)의 종류가 있다.
            ProgressDialog.setProgressStyle
                ex) ProgressDialog.STYLE_HORIZONTAL
                ProgressDialog.setIndeterminate(boolean indeterminate)?
                    - 막대 모양의 ProgressDialog 일 시, 특정 값이 아닌 계속 진행 상태를 보여준다.
                ProgressDialog.setProgressNumberFormat(String format)?
                ProgressDialog.setProgressPercentFormat(NumberFormat format)?

         DatePickerDialog?
            - 날짜 선택을 위한 Dialog
            DatePickerDialog(Context context, Listener.onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth), year, month, day);
         TimePickerDialog?
            - 시간 선택을 위한 Dialog
            TimePickerDialog(Context context, Listener.onTimeSet(TimePicker view, int hourOfDay, int minute), hour, minute, boolean 24hours)
               - 마지막 인자는 24시간 쳬계의 설정 여부. true 은 24시간 체계, false 은 12시간 체계
         커스텀 다이얼로그?
            - 개발자가 직접 화면을 구성한 커스텀 다이얼로그.
                LayoutInflater?
                    SystemService 중 하나로 Layout XML 파일을 초기환 한 후 뷰를 생성한다.
                AlertDialog.Builder.setView(View view)
                    LayoutInflater.inflate() 로 생성된 view 를 인자로 받아 다이얼로그 인스턴스를 생성한다.





